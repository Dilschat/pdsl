initSidebarItems({"mod":[["alloc","Facilities to allocate and deallocate contract storage dynamically."],["cell","Provides low-level primitive cell types."],["chunk","Provides low-level primitives to operate on chunks of cells."],["hash_map","A hash map implemented with quadratic probing."],["stash","A stash collection."],["vec","A contiguous growable array type, written `Vec<T>` but pronounced 'vector'."]],"struct":[["HashMap","Mapping stored in the contract storage."],["Key","Typeless generic key into contract storage."],["KeyDiff","The difference between two keys."],["Stash","A stash collection."],["Value","A value on the storage."],["Vec","A contiguous growable array type, written `Vec<T>` but pronounced 'vector'."]],"trait":[["Allocator","Types implementing this trait are storage allocators."],["Setup","Types implementing this trait are initializable on the contract storage."]]});